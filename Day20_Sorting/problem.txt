Day 20: Sorting – Bubble Sort

🔹 Task:
Sort an array using the Bubble Sort algorithm.  
Track the total number of swaps made during sorting.

🔹 Requirements:
After sorting, print:
1. Array is sorted in numSwaps swaps.
2. First Element: firstElement
3. Last Element: lastElement

🔹 Input Format:
- First line: Integer `n`, number of elements in the array  
- Second line: `n` space-separated integers

🔹 Output Format:
Print the following three lines:
- Array is sorted in numSwaps swaps.
- First Element: firstElement
- Last Element: lastElement

🔹 Constraints:
1 ≤ n ≤ 600  
1 ≤ a[i] ≤ 2 × 10⁶

🔹 Sample Input 0:
3  
1 2 3

🔹 Sample Output 0:
Array is sorted in 0 swaps.  
First Element: 1  
Last Element: 3

🔹 Sample Input 1:
3  
3 2 1

🔹 Sample Output 1:
Array is sorted in 3 swaps.  
First Element: 1  
Last Element: 3

🔹 Explanation:
Bubble Sort compares adjacent elements and swaps them if needed.  
Keep a running count of all swaps across all passes.  
Stop early if no swaps occur in a pass.
