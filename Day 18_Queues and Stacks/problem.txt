Day 18: Stacks and Queues â€“ Palindrome Checker

ğŸ”¹ Task:
Determine whether a given string `s` is a palindrome using:
- A stack (LIFO)
- A queue (FIFO)

ğŸ”¹ Requirements:
Implement the following methods:
- `pushCharacter(char ch)` â†’ pushes a character onto the stack  
- `enqueueCharacter(char ch)` â†’ enqueues a character into the queue  
- `popCharacter()` â†’ pops and returns the top character from the stack  
- `dequeueCharacter()` â†’ dequeues and returns the first character from the queue

ğŸ”¹ Input Format:
A single string `s` (handled by stub code)

ğŸ”¹ Output Format:
If `s` is a palindrome, print:  
    The word, s, is a palindrome.  
Otherwise, print:  
    The word, s, is not a palindrome.

ğŸ”¹ Constraints:
- `s` contains only lowercase English letters

ğŸ”¹ Sample Input:
racecar

ğŸ”¹ Sample Output:
The word, racecar, is a palindrome.
