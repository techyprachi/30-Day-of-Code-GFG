ğŸ”¹ Day 27: Unit Testing â€“ Minimum Index Finder

ğŸ”¹ Task:
Implement a function that returns the index of the minimum value in a given array of integers.

ğŸ”¹ Requirements:
- If the array is empty â†’ raise a ValueError with the message:
  "Cannot get the minimum value index from an empty sequence"
- If multiple elements share the minimum value â†’ return the index of the first occurrence
- Arrays are indexed from 0

ğŸ”¹ Function Signature:
def minimum_index(seq: List[int]) -> int

ğŸ”¹ Test Data Classes to Implement:
1. TestDataEmptyArray
   - get_array(): returns []

2. TestDataUniqueValues
   - get_array(): returns an array of at least 2 unique integers
   - get_expected_result(): returns the index of the minimum value

3. TestDataExactlyTwoDifferentMinimums
   - get_array(): returns an array where the minimum value occurs exactly twice
   - get_expected_result(): returns the index of the first occurrence

ğŸ”¹ Constraints:
- 1 â‰¤ len(array) â‰¤ 1000
- All elements are integers
- You may assume valid input unless the array is empty

ğŸ”¹ Sample Fix:
The original function uses `a[i]` instead of `seq[i]`. This must be corrected.

ğŸ”¹ Sample Output:
If all tests pass, print:
OK
